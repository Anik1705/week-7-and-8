def mystery(n) :
    if n <= 0 :
       return 0
    else:
        return n + mystery(n - 1)

print mystery(4)
>>> 10
------------------------------------------------------------------
def mystery(n) :
  if n <= 0 : 
    return 0
  else:
    return mystery(n // 2) + 1

print mystery(20)
>>> 5
-------------------------------------------------------------------

Consider these functions:
def f(x) :
return g(x) + math.sqrt(h(x))
def g(x) :
return 4 * h(x)
def h(x) :
return x * x + k(x) - 1
def k(x) :
return 2 * (x + 1)

Without actually compiling and running a program, determine the results of the following function calls:
a.  x1 = f(2)  # = 39
b.  x2 = g(h(2)) # = 400
c.  x3 = k(g(2) + h(2)) # = 92
d.  x4 = f(0) + f(1) + f(2) # = 62
e.  x5 = f(-1) + g(-1) + h(-1) + k(-1) # = 0

-----------------------------------------------------------------------
def f(a) :
  if a < 0 : 
    return -1
  n = a
  while n > 0 :
  if n % 2 == 0 : # n is even
     n = n // 2
  elif n == 1 :
     return 1
  else :
     n = 3 * n + 1
  return 0

print (f(-1))
print (f(0))
print (f(1))
print (f(2))
print (f(10))
print (f(100))
>>> -1
>>> 0
>>> 1
>>> 1
>>> 1
>>> 1
